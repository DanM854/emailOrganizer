name: CI/CD Pipeline

on:
  push:
    branches: [ Salvador ]
  pull_request:
    branches: [ Salvador ]

jobs:
  lint:
    name: Revisi칩n de c칩digo (flake8)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Instalar flake8
        run: pip install flake8
      - name: Ejecutar flake8
        run: flake8 . --max-line-length=100

  test:
    name: Ejecutar pruebas unitarias (pytest)
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Instalar dependencias
        run: pip install -r requirements.txt
      - name: Ejecutar pruebas
        run: pytest

  # NEW: Job for Static Application Security Testing (SAST)
  sast:
    name: Escaneo de Seguridad de C칩digo (Bandit)
    runs-on: ubuntu-latest
    needs: [lint, test] # Run after linting and testing
    steps:
      - uses: actions/checkout@v3
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Instalar Bandit
        run: pip install bandit
      - name: Ejecutar Bandit
        run: bandit -r . -ll -f json -o bandit-results.json # Allow failure for now, review results
      - name: Subir resultados de Bandit (opcional, para Code Scanning)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: bandit-results.json

  # NEW: Job for Dependency Scanning
  dependency-scan:
    name: Escaneo de Dependencias (pip-audit)
    runs-on: ubuntu-latest
    needs: [lint, test] # Can run in parallel with SAST
    steps:
      - uses: actions/checkout@v3
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Instalar dependencias
        run: pip install -r requirements.txt
      - name: Instalar pip-audit
        run: pip install pip-audit
      - name: Ejecutar pip-audit
        run: pip-audit --strict # Allow failure for now, review results

  #deploy:
    #name: Despliegue autom치tico en AWS
    #runs-on: ubuntu-latest
    #needs: [lint, test, sast, dependency-scan] # Ensure security scans pass before deploying
    #steps:
    #- uses: actions/checkout@v3
    #- name: Configurar Python
    #  uses: actions/setup-python@v4
    # with:
    #    python-version: '3.10'
    #- name: Verificar credenciales AWS
    #  uses: aws-actions/configure-aws-credentials@v4
    # with:
    #    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #    aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
    #    aws-region: us-east-1
    #- name: Desplegar lambda
    #  run: |
    #    python -m venv venv
    #    source venv/bin/activate
    #    pip install zappa boto3
    #    zappa update dev --settings_file zappa_settings.json
